Index: app/src/main/java/com/caucse/seoulproject/adapter/CultureListAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.caucse.seoulproject.adapter\n\nimport android.content.Intent\nimport android.support.v4.app.FragmentManager\nimport com.caucse.seoulproject.R\nimport android.support.v7.widget.RecyclerView\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport com.caucse.seoulproject.data.CultureRow\nimport com.caucse.seoulproject.fragment.InfoFragment\nimport com.jakewharton.rxbinding2.view.RxView\nimport com.squareup.picasso.Picasso\nimport com.squareup.picasso.PicassoProvider\nimport kotlinx.android.synthetic.main.list_item.view.*\n\n\nclass CultureListAdapter(val view : RecyclerView, val fm: FragmentManager) : RecyclerView.Adapter<RowHolder>() {\n    private val TAG = \"CultureListAdapter\"\n    private val inflater : LayoutInflater = LayoutInflater.from(view.context)\n    private var data : ArrayList<CultureRow> = ArrayList<CultureRow>()\n\n    fun addData(e : List<CultureRow>) {\n        data.addAll(e)\n        notifyDataSetChanged()\n    }\n\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RowHolder {\n        return RowHolder(inflater.inflate(R.layout.list_item, parent, false))\n    }\n\n    override fun onBindViewHolder(holder: RowHolder, position: Int) {\n        val data : CultureRow = data.get(position)\n        val url = data.MAIN_IMG.toLowerCase()\n        val title = data.TITLE\n        try {\n            Picasso.get().load(url)\n                    .fit()\n                    .into(holder.titleImageView)\n        } catch (e: Exception) {\n            Log.d(TAG, e.message)\n        }\n        holder.titleTitleView.setText(title)\n        RxView\n                .clicks(holder.cardView)\n                .subscribe {\n                    Log.d(TAG, \"click card view\")\n                    fm.beginTransaction()\n                            .addToBackStack(\"parent\")\n                            .replace(R.id.frame_layout, InfoFragment.newInstance(data))\n                            .commit()\n                }\n    }\n\n    override fun getItemCount(): Int {\n        return data.size\n    }\n\n}\n\nclass RowHolder (row: View) : RecyclerView.ViewHolder(row) {\n    var cardView = row.card_view\n    var titleImageView = row.title_image\n    var titleTitleView = row.title_title\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/caucse/seoulproject/adapter/CultureListAdapter.kt	(revision c872f82821dd84bb94c3cd414ce59ba3bdffd67d)
+++ app/src/main/java/com/caucse/seoulproject/adapter/CultureListAdapter.kt	(date 1534569385080)
@@ -42,8 +42,7 @@
             Log.d(TAG, e.message)
         }
         holder.titleTitleView.setText(title)
-        RxView
-                .clicks(holder.cardView)
+        RxView.clicks(holder.cardView)
                 .subscribe {
                     Log.d(TAG, "click card view")
                     fm.beginTransaction()
@@ -56,7 +55,6 @@
     override fun getItemCount(): Int {
         return data.size
     }
-
 }
 
 class RowHolder (row: View) : RecyclerView.ViewHolder(row) {
Index: app/src/main/java/com/caucse/seoulproject/helper/CultureApiHelper.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.caucse.seoulproject.helper\n\nimport android.content.Context\nimport android.util.Log\nimport com.caucse.seoulproject.R\nimport com.caucse.seoulproject.data.CultureData\nimport com.google.gson.Gson\nimport kotlinx.coroutines.experimental.async\nimport okhttp3.*\n\nopen class CultureApiHelper {\n    private val TAG = \"CultureApiHelper\"\n    private lateinit var location : String\n\n    init {\n        Log.d(TAG, \"init()\")\n    }\n\n    fun getData(context : Context?, start : Int, end : Int) : CultureData{\n        Log.d(TAG, \"connect()\")\n        val builder: StringBuilder = StringBuilder().append(\"http://openAPI.seoul.go.kr:8088/\")\n                .append(context?.resources?.getString(R.string.key))\n                .append(\"/json/SearchConcertDetailService/\")\n                .append(\"${start}/${end}/\")\n        val url = builder.toString()\n        var response : String? = HttpHelper().execute(url).get()\n        Log.d(TAG, response)\n        return JsonHelper.parseCultureData(response)\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/caucse/seoulproject/helper/CultureApiHelper.kt	(revision c872f82821dd84bb94c3cd414ce59ba3bdffd67d)
+++ app/src/main/java/com/caucse/seoulproject/helper/CultureApiHelper.kt	(date 1534569217373)
@@ -5,6 +5,8 @@
 import com.caucse.seoulproject.R
 import com.caucse.seoulproject.data.CultureData
 import com.google.gson.Gson
+import io.reactivex.Observable
+import io.reactivex.ObservableOnSubscribe
 import kotlinx.coroutines.experimental.async
 import okhttp3.*
 
@@ -27,4 +29,22 @@
         Log.d(TAG, response)
         return JsonHelper.parseCultureData(response)
     }
+
+    fun getData2(context : Context?, start: Int, end: Int) : Observable<Response> {
+        val builder: StringBuilder = StringBuilder().append("http://openAPI.seoul.go.kr:8088/")
+                .append(context?.resources?.getString(R.string.key))
+                .append("/json/SearchConcertDetailService/")
+                .append("${start}/${end}/")
+
+        val request: Request = Request.Builder()
+                .url(builder.toString())
+                .get()
+                .build()
+
+        val client = OkHttpClient()
+
+        return Observable.fromCallable {
+            client.newCall(request).execute()
+        }
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/caucse/seoulproject/viewmodel/ListViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.caucse.seoulproject.viewmodel\n\nimport android.content.Context\nimport android.support.v4.app.Fragment\nimport android.util.Log\nimport com.caucse.seoulproject.data.CultureRow\nimport com.caucse.seoulproject.helper.CultureApiHelper\nimport io.reactivex.Observable\nimport java.util.concurrent.ThreadPoolExecutor\n\nclass ListViewModel (val context : Context) {\n    val TAG = \"ListViewModel\"\n    var cultureData : ArrayList<CultureRow> = ArrayList()\n    val cultureApiHelper by lazy { CultureApiHelper() }\n\n    fun initData() : Observable<List<CultureRow>> {\n        Log.d(TAG, \"initData()\")\n        cultureData.clear()\n        return getData(cultureData.size, cultureData.size + 3)\n    }\n\n    fun requestAdditionalData() : Observable<List<CultureRow>> {\n        Log.d(TAG, \"requestAdditionalData()\")\n        return getData(cultureData.size + 1, cultureData.size + 3)\n    }\n\n    fun getData(start: Int, end: Int) : Observable<List<CultureRow>> {\n        Log.d(TAG ,\"getData($start, $end)\")\n        return Observable.create{\n            subscriber ->\n            var data = cultureApiHelper.getData(context, start, end).SearchConcertDetailService.row\n            cultureData.addAll(data)\n            subscriber.onNext(data)\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/caucse/seoulproject/viewmodel/ListViewModel.kt	(revision c872f82821dd84bb94c3cd414ce59ba3bdffd67d)
+++ app/src/main/java/com/caucse/seoulproject/viewmodel/ListViewModel.kt	(date 1534569672869)
@@ -5,7 +5,10 @@
 import android.util.Log
 import com.caucse.seoulproject.data.CultureRow
 import com.caucse.seoulproject.helper.CultureApiHelper
+import com.caucse.seoulproject.helper.JsonHelper
 import io.reactivex.Observable
+import io.reactivex.disposables.Disposable
+import io.reactivex.disposables.Disposables
 import java.util.concurrent.ThreadPoolExecutor
 
 class ListViewModel (val context : Context) {
Index: .idea/caches/build_file_checksums.ser
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>��\u0000\u0005sr\u0000?com.android.tools.idea.gradle.project.ProjectBuildFileChecksumsDW4��\u0013g)\u0002\u0000\u0002J\u0000\u0019myLastGradleSyncTimestampL\u0000\u000FmyFileChecksumst\u0000\u000FLjava/util/Map;xp\u0000\u0000\u0001eH|X�sr\u0000\u0011java.util.HashMap\u0005\u0007���\u0016`�\u0003\u0000\u0002F\u0000\nloadFactorI\u0000\tthresholdxp?@\u0000\u0000\u0000\u0000\u0000\fw\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0006t\u0000\u0010app\\build.gradleur\u0000\u0002[B��\u0017�\u0006\bT�\u0002\u0000\u0000xp\u0000\u0000\u0000\u0010Xˈ�\brS\u0018��\"���U�t\u0000\u000Fsettings.gradleuq\u0000~\u0000\u0006\u0000\u0000\u0000\u0010��`�<�\u0007n-`.\u001AWBát\u0000\fbuild.gradleuq\u0000~\u0000\u0006\u0000\u0000\u0000\u0010���\u0018ًYq��m4s�H�t\u0000\u0010local.propertiesuq\u0000~\u0000\u0006\u0000\u0000\u0000\u0010��(\u007F��'J�$\u0007bH�\u001E�t\u0000(C:\\Users\\CNLAB\\.gradle\\gradle.propertiesuq\u0000~\u0000\u0006\u0000\u0000\u0000\u0010�\u001D�ُ\u0000�\u0004�\t���B~t\u0000\u0011gradle.propertiesuq\u0000~\u0000\u0006\u0000\u0000\u0000\u0010�IjͫN�\u001F�]�\u0002�\u0019Kxx
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/caches/build_file_checksums.ser	(revision c872f82821dd84bb94c3cd414ce59ba3bdffd67d)
+++ .idea/caches/build_file_checksums.ser	(date 1534565024896)
@@ -1,2 +1,2 @@
-�� sr ?com.android.tools.idea.gradle.project.ProjectBuildFileChecksumsDW4��g) J myLastGradleSyncTimestampL myFileChecksumst Ljava/util/Map;xp  eH|X�sr java.util.HashMap���`� F 
-loadFactorI 	thresholdxp?@     w      t app\build.gradleur [B���T�  xp   Xˈ�rS��"���U�t settings.gradleuq ~    ��`�<�n-`.WBát build.gradleuq ~    ���ًYq��m4s�H�t local.propertiesuq ~    ��(��'J�$bH��t (C:\Users\CNLAB\.gradle\gradle.propertiesuq ~    ��ُ ��	���B~t gradle.propertiesuq ~    �IjͫN��]��Kxx
\ No newline at end of file
+�� sr ?com.android.tools.idea.gradle.project.ProjectBuildFileChecksumsDW4��g) J myLastGradleSyncTimestampL myFileChecksumst Ljava/util/Map;xp  eK4{sr java.util.HashMap���`� F 
+loadFactorI 	thresholdxp?@     w      t app\build.gradleur [B���T�  xp   )���_"An�#k�~\(�t settings.gradleuq ~    ��`�<�n-`.WBát build.gradleuq ~    ���ًYq��m4s�H�t local.propertiesuq ~    �hFI�@��g7Ke�t 0C:\Users\Administrator\.gradle\gradle.propertiesuq ~    ��ُ ��	���B~t gradle.propertiesuq ~    �IjͫN��]��Kxx
\ No newline at end of file
